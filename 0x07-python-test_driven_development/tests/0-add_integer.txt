The ``0-add_integer`` module
============================

using ``add_integer``
----------------------

This module adds and returns an integer of two arguments a and b.
First import ``add_integer`` from ``0-add_integer`` module:

      >>> add_integer = __import__('0-add_integer').add_integer

Now use it:

    >>> add_integer(2, 3)
    5
    >>> add_integer(-2, 3)
    1

with float values:

     >>> add_integer(1.99, 3.564443)
     4
     >>> add_integer(-2, 3.564443)
     1

with strings it raises an error:

     >>> add_integer('a', 2) #doctest: +ELLIPSIS
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer
     >>> add_integer(2, 'a') #doctest: +ELLIPSIS
     Traceback (most recent call last):
     ...
     TypeError: b must be an integer

::

    >>> add_integer(None)
    Traceback (most recent call last):
    TypeError: a must be an integer

::

    >>> add_integer(2.3, None)
    Traceback (most recent call last):
    TypeError: b must be an integer

If both arguments are non-integers and non-floats, a TypeError message is only
printed for the first argument.

::

    >>> add_integer("hello", "there")
    Traceback (most recent call last):
    TypeError: a must be an integer

The function will fail if infinity is provided.

::

    >>> add_integer(float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer


::

    >>> add_integer(2, float('inf'))
    Traceback (most recent call last):
    OverflowError: cannot convert float infinity to integer

And again with NaN numbers.

::

    >>> add_integer(float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer

::

    >>> add_integer(2, float('nan'))
    Traceback (most recent call last):
    ValueError: cannot convert float NaN to integer
